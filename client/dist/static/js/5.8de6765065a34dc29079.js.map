{"version":3,"sources":["webpack:///static/js/5.8de6765065a34dc29079.js","webpack:///./src/data/charts/DonutChartData.js","webpack:///./src/components/statistics/charts/Charts.vue?4d45","webpack:///./node_modules/chroma-js/chroma.js","webpack:///./node_modules/core-js/library/fn/array/from.js","webpack:///./src/data/charts/PieChartData.js","webpack:///./src/components/statistics/charts/Charts.vue?3363","webpack:///./node_modules/babel-runtime/helpers/toConsumableArray.js","webpack:///./src/data/charts/VerticalBarChartData.js","webpack:///./src/components/statistics/charts/Charts.vue?803e","webpack:///./src/data/charts/BubbleChartData.js","webpack:///src/components/statistics/charts/Charts.vue","webpack:///./src/data/charts/LineChartData.js","webpack:///./node_modules/babel-runtime/core-js/array/from.js","webpack:///./src/components/statistics/charts/Charts.vue","webpack:///./node_modules/core-js/library/modules/_create-property.js","webpack:///./src/services/utils.js","webpack:///./node_modules/core-js/library/modules/es6.array.from.js","webpack:///./src/data/charts/HorizontalBarChartData.js"],"names":["webpackJsonp","49xt","module","__webpack_exports__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_0_vuex_store__","palette","getters","labels","datasets","label","backgroundColor","danger","info","success","data","4Oln","exports","push","i","version","sources","names","mappings","file","sourcesContent","sourceRoot","4SWg","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Color","DEG2RAD","LAB_CONSTANTS","PI","PITHIRD","RAD2DEG","TWOPI","_average_lrgb","_guess_formats","_guess_formats_sorted","_input","_interpolators","abs","atan2","bezier","blend","blend_f","brewer","burn","chroma","clip_rgb","cmyk2rgb","cos","css2rgb","darken","dodge","each","floor","hcg2rgb","hex2rgb","hsi2rgb","hsl2css","hsl2rgb","hsv2rgb","interpolate","interpolate_hsx","interpolate_lab","interpolate_lrgb","interpolate_num","interpolate_rgb","lab2lch","lab2rgb","lab_xyz","lch2lab","lch2rgb","lighten","limit","log","luminance_x","m","max","multiply","normal","num2rgb","overlay","pow","rgb2cmyk","rgb2css","rgb2hcg","rgb2hex","rgb2hsi","rgb2hsl","rgb2hsv","rgb2lab","rgb2lch","rgb2luminance","rgb2num","rgb2temperature","rgb2xyz","rgb_xyz","rnd","round","screen","sin","sqrt","temperature2rgb","type","unpack","w3cx11","xyz_lab","xyz_rgb","slice","classToType","len","name","o","ref","split","length","toLowerCase","obj","strType","Object","prototype","toString","call","x","min","args","Array","rgb","_clipped","_unclipped","Math","arguments","func","ctor","child","result","apply","undefined","arg","chk","len1","me","mode","w","this","_rgb","sort","a","b","p","test","console","warn","hex","clone","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","key","results","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","colors","g","l","r","y","z","isNaN","Yn","Xn","Zn","t","t1","t2","t0","Kn","t3","ref1","lab","concat","I","I0","I1","c","lab0","lab1","lab2","lab3","ref2","f","scale","cubehelix","start","rotations","hue","gamma","lightness","dh","dl","fract","amp","cos_a","h","sin_a","s","random","code","digits","charAt","col1","col2","interpol","res","alpha","mix","k","v","map","rgba","n","lrgb","xyz0","xyz1","col","xyz","average","A","cnt","dx","dy","first","xyz2","splice","get","u","match","substr","parseInt","css","channels","hxa","str","Number","NaN","hsl","q","ref3","ref4","ref5","delta","hsv","num","_c","_g","hcg","aa","ab","join","named","L","lch","hcl","reverse","cmyk","gl","luminance","lum","cur_lum","eps","max_iter","lm","kelvin","temp","maxTemp","minTemp","temperature","K","contrast","l1","l2","distance","d","sum_sq","deltaE","C","L1","L2","a1","a2","b1","b2","c1","c2","c4","dH2","delA","delB","delC","delL","h1","sc","sh","sl","v1","v2","v3","modechan","channel","src","indexOf","set","value","clipped","amount","brighten","darker","brighter","saturate","desaturate","premultiply","bottom","top","c0","out","analyze","val","MAX_VALUE","sum","values","count","domain","limits","positions","_classes","_colorCache","_colors","_correctLightness","_domain","_gamma","_max","_min","_mode","_nacol","_out","_padding","_pos","_spread","_useCache","getClass","getColor","resetCache","setColors","tmap","maxc","minc","bypassMap","classes","_m","range","_o","spread","correctLightness","L0","L_actual","L_diff","L_ideal","pol","padding","numColors","dd","dm","samples","cache","scales","cool","hot","filter","add","visit","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","assignments","best","centroids","cluster","clusterSizes","dist","j","kClusters","max_log","min_log","mindist","nb_iters","newCentroids","pb","pr","ref10","ref11","ref12","ref13","ref14","ref6","ref7","ref8","ref9","repeat","tmpKMeansBreaks","LOG10E","acos","hsi","hue0","hue1","lbv","lbv0","lbv1","sat","sat0","sat1","n1","n2","5zde","from","ANn+","primary","warning","EAxN","render","_vm","_h","$createElement","_self","staticClass","attrs","headerText","options","scoreData","_v","_e","staticRenderFns","esExports","Gu7T","__esModule","_from","_from2","default","arr","isArray","arr2","ITSI","borderColor","transparent","KvVw","content","locals","LODt","__WEBPACK_IMPORTED_MODULE_1_services_utils__","Q9YG","__WEBPACK_IMPORTED_MODULE_0_data_charts_LineChartData__","__WEBPACK_IMPORTED_MODULE_1_data_charts_BubbleChartData__","__WEBPACK_IMPORTED_MODULE_2_data_charts_PieChartData__","__WEBPACK_IMPORTED_MODULE_3_data_charts_DonutChartData__","__WEBPACK_IMPORTED_MODULE_4_data_charts_VerticalBarChartData__","__WEBPACK_IMPORTED_MODULE_5_data_charts_HorizontalBarChartData__","__WEBPACK_IMPORTED_MODULE_6_chroma_js__","__WEBPACK_IMPORTED_MODULE_6_chroma_js___default","bubbleChartData","lineChartData","pieChartData","donutChartData","verticalBarChartData","horizontalBarChartData","xAxes","lineTension","computed","$store","state","AllResults","pass","team","color","td","fill","pointBackgroundColor","pointBorderColor","pointMoverBackgroundColor","score","created_at","po","reduce","QHHf","__WEBPACK_IMPORTED_MODULE_0_services_utils__","__WEBPACK_IMPORTED_MODULE_1_vuex_store__","c/Tr","dfb7","injectStyle","ssrContext","defineProperty","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Charts_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_cb88b40a_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Charts_vue__","normalizeComponent","__vue_styles__","Component","fBQ2","$defineProperty","createDesc","object","index","hLWQ","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default","opacity","trim","substring","findInNestedByName","array","children","unshift","qyJz","ctx","$export","toObject","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","arrayLike","step","iterator","O","aLen","mapfn","mapping","iterFn","next","done","uAA8"],"mappings":"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","file":"static/js/5.8de6765065a34dc29079.js","sourcesContent":["webpackJsonp([5],{\n\n/***/ \"49xt\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex_store__ = __webpack_require__(\"IcnI\");\n\n\nvar palette = __WEBPACK_IMPORTED_MODULE_0_vuex_store__[\"a\" /* default */].getters.palette;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  labels: ['North America', 'South America', 'Australia'],\n  datasets: [{\n    label: 'Population (millions)',\n    backgroundColor: [palette.danger, palette.info, palette.success],\n    data: [2478, 5267, 734]\n  }]\n});\n\n/***/ }),\n\n/***/ \"4Oln\":\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(\"FZ+f\")(true);\n// imports\n\n\n// module\nexports.push([module.i, \".widget.chart-widget .widget-body{height:550px}\", \"\", {\"version\":3,\"sources\":[\"/Users/to-hutohu/tohutohu/isucon-portal/client/src/components/statistics/charts/Charts.vue\"],\"names\":[],\"mappings\":\"AACA,kCACE,YAAc,CACf\",\"file\":\"Charts.vue\",\"sourcesContent\":[\"\\n.widget.chart-widget .widget-body {\\n  height: 550px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ \"4SWg\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n(function() {\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\n    slice = [].slice;\n\n  type = (function() {\n\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function(rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n\n  TWOPI = PI * 2;\n\n  PITHIRD = PI / 3;\n\n  DEG2RAD = PI / 180;\n\n  RAD2DEG = 180 / PI;\n\n  chroma = function() {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, arguments, function(){});\n  };\n\n  chroma[\"default\"] = chroma;\n\n  _interpolators = [];\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return chroma;\n    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.version = '1.3.7';\n\n  _input = {};\n\n  _guess_formats = [];\n\n  _guess_formats_sorted = false;\n\n  Color = (function() {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function(a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n          if (mode) {\n            break;\n          }\n        }\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function() {\n      return this.hex();\n    };\n\n    Color.prototype.clone = function() {\n      return chroma(me._rgb);\n    };\n\n    return Color;\n\n  })();\n\n  chroma._input = _input;\n\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function() {\n    var key, results;\n    results = [];\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n    return results;\n  })();\n\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function() {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function(t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function() {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function() {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function() {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n    colors = (function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n      return results;\n    })();\n    if (colors.length === 2) {\n      ref = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref[0], lab1 = ref[1];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.bezier = function(colors) {\n    var f;\n    f = bezier(colors);\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    return f;\n  };\n\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n   */\n\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n    if (start == null) {\n      start = 300;\n    }\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n    if (hue == null) {\n      hue = 1;\n    }\n    if (gamma == null) {\n      gamma = 1;\n    }\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n    dh = 0;\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    f = function(fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255]));\n    };\n    f.start = function(s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function(r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function(g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function(h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function(h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function() {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function(col1, col2, f, m) {\n    var interpol, len, o, res;\n    if (f == null) {\n      f = 0.5;\n    }\n    if (m == null) {\n      m = 'rgb';\n    }\n\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function(col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function() {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n    return results;\n  };\n\n  chroma.rgb = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\n  };\n\n  Color.prototype.rgb = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function(n) {\n      var a;\n      a = unpack(arguments);\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function(colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    return new Color(xyz);\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function(colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    l = colors.length;\n    colors = colors.map(function(c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(isNaN(xyz[i]) ? 0 : 1);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n    alpha = first.alpha();\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += 1;\n          if (mode.charAt(i) === 'h') {\n            A = xyz2[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          } else {\n            xyz[i] += xyz2[i];\n          }\n        }\n      }\n    }\n    for (i in xyz) {\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n        while (A < 0) {\n          A += 360;\n        }\n        while (A >= 360) {\n          A -= 360;\n        }\n        xyz[i] = A;\n      } else {\n        xyz[i] = xyz[i] / cnt[i];\n      }\n    }\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function(channels, mode) {\n    var a, b, g, hxa, r, str, u;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + (function() {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n        case 'argb':\n          return hxa + str;\n        default:\n          return str;\n      }\n    })();\n  };\n\n  _input.hex = function(h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\n  };\n\n  Color.prototype.hex = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function() {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, min, ref, s;\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  chroma.hsl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function() {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function() {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  chroma.hsv = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function() {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function(num) {\n    var b, g, r;\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = (num >> 8) & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function() {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function(num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function() {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function() {\n    var _g, b, c, delta, g, h, min, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function() {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function(css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  rgb2css = function(rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {\n\n    }\n  };\n\n  rnd = function(a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function(hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function(h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['css']), function(){});\n  };\n\n  Color.prototype.css = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function(name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function(n) {\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function(n) {\n    var h, k;\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n      this._rgb[3] = 1;\n      this;\n    }\n    h = this.hex();\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n    return h;\n  };\n\n  lch2lab = function() {\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function() {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function() {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function() {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function() {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function() {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function(mode) {\n    var b, c, f, g, k, m, r, ref, y;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function() {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function() {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\n  };\n\n  Color.prototype.cmyk = function() {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function() {\n    var i, k, o, rgb, v;\n    rgb = (function() {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n      return results;\n    }).apply(this, arguments);\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n    return rgb;\n  };\n\n  chroma.gl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\n  };\n\n  Color.prototype.gl = function() {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function(r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function(lum, mode) {\n    var cur_lum, eps, max_iter, rgba, test;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n    rgba = this._rgb;\n    if (lum === 0) {\n      rgba = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      rgba = [255, 255, 255, this[3]];\n    } else {\n      cur_lum = rgb2luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      if (cur_lum > lum) {\n        rgba = test(chroma('black'), this).rgba();\n      } else {\n        rgba = test(this, chroma('white')).rgba();\n      }\n    }\n    return chroma(rgba).alpha(this.alpha());\n  };\n\n  temperature2rgb = function(kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b];\n  };\n\n  rgb2temperature = function() {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function() {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2, ref, ref1;\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function(a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n    if (mode == null) {\n      mode = 'lab';\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function(a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n    if (L == null) {\n      L = 1;\n    }\n    if (C == null) {\n      C = 1;\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\n  };\n\n  Color.prototype.get = function(modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n    if (channel) {\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function(modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +(value.substr(1));\n              break;\n            case '/':\n              src[i] /= +(value.substr(1));\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function() {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function(a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function(amount) {\n    var lab, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function(amount) {\n    var lch, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function() {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function(f) {\n    return function(bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function(f) {\n    return function(c0, c1) {\n      var i, o, out;\n      out = [];\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n      return out;\n    };\n  };\n\n  normal = function(a, b) {\n    return a;\n  };\n\n  multiply = function(a, b) {\n    return a * b / 255;\n  };\n\n  darken = function(a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function(a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function(a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n\n  blend.multiply = blend_f(each(multiply));\n\n  blend.screen = blend_f(each(screen));\n\n  blend.overlay = blend_f(each(overlay));\n\n  blend.darken = blend_f(each(darken));\n\n  blend.lighten = blend_f(each(lighten));\n\n  blend.dodge = blend_f(each(dodge));\n\n  blend.burn = blend_f(each(burn));\n\n  chroma.blend = blend;\n\n  chroma.analyze = function(data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.scale = function(colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n    setColors = function(colors) {\n      var c, col, o, ref, ref1, w;\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n      if (type(colors) === 'array') {\n        colors = colors.slice(0);\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        _pos.length = 0;\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    getClass = function(value) {\n      var i, n;\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n      val = value;\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val)) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n    f = function(v) {\n      var c;\n      c = chroma(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function(classes) {\n      var d;\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function(domain) {\n      var c, d, k, len, o, ref, w;\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function(p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function(numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n        result = (function() {\n          results = [];\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\n          return results;\n        }).apply(this).map(function(i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function(v) {\n          return f(v);\n        });\n      }\n      if (chroma[out]) {\n        result = result.map(function(c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function(c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function(g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  hsi2rgb = function(h, s, i) {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function() {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function() {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function(col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat((function() {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n    return results;\n  })());\n\n  interpolate_num = function(col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function(col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n\n}).call(this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(\"3IRH\")(module)))\n\n/***/ }),\n\n/***/ \"5zde\":\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(\"zQR9\");\n__webpack_require__(\"qyJz\");\nmodule.exports = __webpack_require__(\"FeBl\").Array.from;\n\n\n/***/ }),\n\n/***/ \"ANn+\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex_store__ = __webpack_require__(\"IcnI\");\n\n\nvar palette = __WEBPACK_IMPORTED_MODULE_0_vuex_store__[\"a\" /* default */].getters.palette;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  labels: ['Africa', 'Asia', 'Europe'],\n  datasets: [{\n    label: 'Population (millions)',\n    backgroundColor: [palette.primary, palette.warning, palette.danger],\n    data: [2478, 5267, 734]\n  }]\n});\n\n/***/ }),\n\n/***/ \"EAxN\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"charts-page\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('vuestic-widget',{staticClass:\"chart-widget\",attrs:{\"headerText\":\"スコア推移\"}},[_c('vuestic-chart',{attrs:{\"options\":_vm.options,\"data\":_vm.scoreData,\"type\":\"line\"}})],1)],1)]),_vm._v(\" \"),(false)?_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('vuestic-widget',{staticClass:\"chart-widget\",attrs:{\"headerText\":_vm._f(\"translate\")('charts.verticalBarChart')}},[_c('vuestic-chart',{attrs:{\"data\":_vm.verticalBarChartData,\"type\":\"vertical-bar\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('vuestic-widget',{staticClass:\"chart-widget\",attrs:{\"headerText\":_vm._f(\"translate\")('charts.horizontalBarChart')}},[_c('vuestic-chart',{attrs:{\"data\":_vm.horizontalBarChartData,\"type\":\"horizontal-bar\"}})],1)],1)]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('vuestic-widget',{staticClass:\"chart-widget\",attrs:{\"headerText\":_vm._f(\"translate\")('charts.pieChart')}},[_c('vuestic-chart',{attrs:{\"data\":_vm.pieChartData,\"type\":\"pie\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('vuestic-widget',{staticClass:\"chart-widget\",attrs:{\"headerText\":_vm._f(\"translate\")('charts.donutChart')}},[_c('vuestic-chart',{attrs:{\"data\":_vm.donutChartData,\"type\":\"donut\"}})],1)],1)]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('vuestic-widget',{staticClass:\"chart-widget\",attrs:{\"headerText\":_vm._f(\"translate\")('charts.bubbleChart')}},[_c('vuestic-chart',{attrs:{\"data\":_vm.bubbleChartData,\"type\":\"bubble\"}})],1)],1)])]):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n\n/***/ \"Gu7T\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _from = __webpack_require__(\"c/Tr\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n/***/ }),\n\n/***/ \"ITSI\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex_store__ = __webpack_require__(\"IcnI\");\n\n\nvar palette = __WEBPACK_IMPORTED_MODULE_0_vuex_store__[\"a\" /* default */].getters.palette;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  datasets: [{\n    label: 'USA',\n    backgroundColor: palette.primary,\n    borderColor: palette.transparent,\n    data: [50, 20, 12, 39, 10, 40, 39, 80, 40, 20, 12, 11]\n  }, {\n    label: 'USSR',\n    backgroundColor: palette.info,\n    borderColor: palette.transparent,\n    data: [50, 10, 22, 39, 15, 20, 85, 32, 60, 50, 20, 30]\n  }]\n});\n\n/***/ }),\n\n/***/ \"KvVw\":\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(\"4Oln\");\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(\"rjj0\")(\"830e6876\", content, true);\n\n/***/ }),\n\n/***/ \"LODt\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex_store__ = __webpack_require__(\"IcnI\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_services_utils__ = __webpack_require__(\"hLWQ\");\n\n\n\nvar palette = __WEBPACK_IMPORTED_MODULE_0_vuex_store__[\"a\" /* default */].getters.palette;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  datasets: [{\n    label: 'USA',\n    backgroundColor: __WEBPACK_IMPORTED_MODULE_1_services_utils__[\"a\" /* default */].hex2rgb(palette.danger, 0.9).css,\n    borderColor: palette.transparent,\n    data: [{\n      x: 23,\n      y: 25,\n      r: 15\n    }, {\n      x: 40,\n      y: 10,\n      r: 10\n    }, {\n      x: 30,\n      y: 22,\n      r: 30\n    }, {\n      x: 7,\n      y: 43,\n      r: 40\n    }, {\n      x: 23,\n      y: 27,\n      r: 120\n    }, {\n      x: 20,\n      y: 15,\n      r: 11\n    }, {\n      x: 7,\n      y: 10,\n      r: 35\n    }, {\n      x: 10,\n      y: 20,\n      r: 40\n    }]\n  }, {\n    label: 'Russia',\n    backgroundColor: __WEBPACK_IMPORTED_MODULE_1_services_utils__[\"a\" /* default */].hex2rgb(palette.primary, 0.9).css,\n    borderColor: palette.transparent,\n    data: [{\n      x: 0,\n      y: 30,\n      r: 15\n    }, {\n      x: 20,\n      y: 20,\n      r: 20\n    }, {\n      x: 15,\n      y: 15,\n      r: 50\n    }, {\n      x: 31,\n      y: 46,\n      r: 30\n    }, {\n      x: 20,\n      y: 14,\n      r: 25\n    }, {\n      x: 34,\n      y: 17,\n      r: 30\n    }, {\n      x: 44,\n      y: 44,\n      r: 10\n    }, {\n      x: 39,\n      y: 25,\n      r: 35\n    }]\n  }, {\n    label: 'Canada',\n    backgroundColor: __WEBPACK_IMPORTED_MODULE_1_services_utils__[\"a\" /* default */].hex2rgb(palette.warning, 0.9).css,\n    borderColor: palette.transparent,\n    data: [{\n      x: 10,\n      y: 30,\n      r: 45\n    }, {\n      x: 10,\n      y: 50,\n      r: 20\n    }, {\n      x: 5,\n      y: 5,\n      r: 30\n    }, {\n      x: 40,\n      y: 30,\n      r: 20\n    }, {\n      x: 33,\n      y: 15,\n      r: 18\n    }, {\n      x: 40,\n      y: 20,\n      r: 40\n    }, {\n      x: 33,\n      y: 33,\n      r: 40\n    }]\n  }, {\n    label: 'Belarus',\n    backgroundColor: __WEBPACK_IMPORTED_MODULE_1_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.9).css,\n    borderColor: palette.transparent,\n    data: [{\n      x: 35,\n      y: 30,\n      r: 45\n    }, {\n      x: 25,\n      y: 40,\n      r: 35\n    }, {\n      x: 5,\n      y: 5,\n      r: 30\n    }, {\n      x: 5,\n      y: 20,\n      r: 40\n    }, {\n      x: 10,\n      y: 40,\n      r: 15\n    }, {\n      x: 3,\n      y: 10,\n      r: 10\n    }, {\n      x: 15,\n      y: 40,\n      r: 40\n    }, {\n      x: 7,\n      y: 15,\n      r: 10\n    }]\n  }, {\n    label: 'Ukraine',\n    backgroundColor: __WEBPACK_IMPORTED_MODULE_1_services_utils__[\"a\" /* default */].hex2rgb(palette.success, 0.9).css,\n    borderColor: palette.transparent,\n    data: [{\n      x: 25,\n      y: 10,\n      r: 40\n    }, {\n      x: 17,\n      y: 40,\n      r: 40\n    }, {\n      x: 35,\n      y: 10,\n      r: 20\n    }, {\n      x: 3,\n      y: 40,\n      r: 10\n    }, {\n      x: 40,\n      y: 40,\n      r: 40\n    }, {\n      x: 20,\n      y: 10,\n      r: 10\n    }, {\n      x: 10,\n      y: 27,\n      r: 35\n    }, {\n      x: 7,\n      y: 26,\n      r: 40\n    }]\n  }]\n});\n\n/***/ }),\n\n/***/ \"Q9YG\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_data_charts_LineChartData__ = __webpack_require__(\"QHHf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_data_charts_BubbleChartData__ = __webpack_require__(\"LODt\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_data_charts_PieChartData__ = __webpack_require__(\"ANn+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_data_charts_DonutChartData__ = __webpack_require__(\"49xt\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_data_charts_VerticalBarChartData__ = __webpack_require__(\"ITSI\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_data_charts_HorizontalBarChartData__ = __webpack_require__(\"uAA8\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_chroma_js__ = __webpack_require__(\"4SWg\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_chroma_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_chroma_js__);\n\n\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'charts',\n  data: function data() {\n    return {\n      bubbleChartData: __WEBPACK_IMPORTED_MODULE_1_data_charts_BubbleChartData__[\"a\" /* default */],\n      lineChartData: __WEBPACK_IMPORTED_MODULE_0_data_charts_LineChartData__[\"a\" /* default */],\n      pieChartData: __WEBPACK_IMPORTED_MODULE_2_data_charts_PieChartData__[\"a\" /* default */],\n      donutChartData: __WEBPACK_IMPORTED_MODULE_3_data_charts_DonutChartData__[\"a\" /* default */],\n      verticalBarChartData: __WEBPACK_IMPORTED_MODULE_4_data_charts_VerticalBarChartData__[\"a\" /* default */],\n      horizontalBarChartData: __WEBPACK_IMPORTED_MODULE_5_data_charts_HorizontalBarChartData__[\"a\" /* default */],\n      options: {\n        scales: {\n          xAxes: [{\n            type: 'time'\n          }]\n        },\n        lineTension: 0\n      }\n    };\n  },\n  computed: {\n    scoreData: function scoreData() {\n      var data = {\n        datasets: []\n      };\n      data.datasets = this.$store.state.AllResults.filter(function (a) {\n        return a.results.filter(function (r) {\n          return r.pass;\n        }).length > 0;\n      }).map(function (team, i, c) {\n        var color = __WEBPACK_IMPORTED_MODULE_6_chroma_js___default()(360 / c.length * i, 0.6, 0.4, 'hsl');\n        var td = {\n          label: team.name,\n          fill: false,\n          lineTension: 0,\n          pointBackgroundColor: color.alpha(0.8).css(),\n          borderColor: color.alpha(0.6).css(),\n          pointBorderColor: color.darken(0.4).alpha(0.8).css(),\n          pointMoverBackgroundColor: color.darken(2).alpha(0.8).css(),\n          data: []\n        };\n        td.data = team.results.filter(function (r) {\n          return r.pass && r.score !== 0;\n        }).map(function (r) {\n          return { x: r.created_at, y: r.score };\n        });\n        return td;\n      }).filter(function (a) {\n        return a.data.length > 0;\n      }).sort(function (a, b) {\n        var po = a.data.reduce(function (c, d) {\n          return c < d.y ? d.y : c;\n        }, 0);\n        var pi = b.data.reduce(function (c, d) {\n          return c < d.y ? d.y : c;\n        }, 0);\n        return pi - po;\n      });\n\n      return data;\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"QHHf\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_services_utils__ = __webpack_require__(\"hLWQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vuex_store__ = __webpack_require__(\"IcnI\");\n\n\n\nvar palette = __WEBPACK_IMPORTED_MODULE_1_vuex_store__[\"a\" /* default */].getters.palette;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'Debit',\n    backgroundColor: __WEBPACK_IMPORTED_MODULE_0_services_utils__[\"a\" /* default */].hex2rgb(palette.primary, 0.6).css,\n    borderColor: palette.transparent,\n    data: [40, 39, 10, 40, 39, 80, 40]\n  }, {\n    label: 'Credit',\n    backgroundColor: __WEBPACK_IMPORTED_MODULE_0_services_utils__[\"a\" /* default */].hex2rgb(palette.info, 0.6).css,\n    borderColor: palette.transparent,\n    data: [50, 20, 70, 30, 10, 5, 70]\n  }]\n});\n\n/***/ }),\n\n/***/ \"c/Tr\":\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(\"5zde\"), __esModule: true };\n\n/***/ }),\n\n/***/ \"dfb7\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Charts_vue__ = __webpack_require__(\"Q9YG\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_cb88b40a_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Charts_vue__ = __webpack_require__(\"EAxN\");\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"KvVw\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n/* template */\n\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_Charts_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_cb88b40a_hasScoped_false_transformToRequire_video_src_source_src_img_src_image_xlink_href_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_Charts_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ \"fBQ2\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $defineProperty = __webpack_require__(\"evD5\");\nvar createDesc = __webpack_require__(\"X8DO\");\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n/***/ }),\n\n/***/ \"hLWQ\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__ = __webpack_require__(\"Gu7T\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__ = __webpack_require__(\"Dd8w\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends__);\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  hex2rgb: function hex2rgb(hex, opacity) {\n    hex = (hex + '').trim();\n\n    var rgb = null;\n    var match = hex.match(/^#?(([0-9a-zA-Z]{3}){1,3})$/);\n\n    if (!match) {\n      return null;\n    }\n\n    rgb = {};\n\n    hex = match[1];\n\n    if (hex.length === 6) {\n      rgb.r = parseInt(hex.substring(0, 2), 16);\n      rgb.g = parseInt(hex.substring(2, 4), 16);\n      rgb.b = parseInt(hex.substring(4, 6), 16);\n    } else if (hex.length === 3) {\n      rgb.r = parseInt(hex.substring(0, 1) + hex.substring(0, 1), 16);\n      rgb.g = parseInt(hex.substring(1, 2) + hex.substring(1, 2), 16);\n      rgb.b = parseInt(hex.substring(2, 3) + hex.substring(2, 3), 16);\n    }\n\n    rgb.css = 'rgb' + (opacity ? 'a' : '') + '(';\n    rgb.css += rgb.r + ',' + rgb.g + ',' + rgb.b;\n    rgb.css += (opacity ? ',' + opacity : '') + ')';\n\n    return rgb;\n  },\n  findInNestedByName: function findInNestedByName(array, name) {\n    if (typeof array !== 'undefined') {\n      for (var i = 0; i < array.length; i++) {\n        if (array[i].name === name) return [__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, array[i])];\n        var a = this.findInNestedByName(array[i].children, name);\n        if (a != null) {\n          a.unshift(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_extends___default()({}, array[i]));\n          return [].concat(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_toConsumableArray___default()(a));\n        }\n      }\n    }\n    return null;\n  }\n});\n\n/***/ }),\n\n/***/ \"qyJz\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar ctx = __webpack_require__(\"+ZMJ\");\nvar $export = __webpack_require__(\"kM2E\");\nvar toObject = __webpack_require__(\"sB3e\");\nvar call = __webpack_require__(\"msXi\");\nvar isArrayIter = __webpack_require__(\"Mhyx\");\nvar toLength = __webpack_require__(\"QRG4\");\nvar createProperty = __webpack_require__(\"fBQ2\");\nvar getIterFn = __webpack_require__(\"3fs2\");\n\n$export($export.S + $export.F * !__webpack_require__(\"dY0y\")(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n/***/ }),\n\n/***/ \"uAA8\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vuex_store__ = __webpack_require__(\"IcnI\");\n\n\nvar palette = __WEBPACK_IMPORTED_MODULE_0_vuex_store__[\"a\" /* default */].getters.palette;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  datasets: [{\n    label: 'Vuestic Satisfaction Score',\n    backgroundColor: palette.warning,\n    borderColor: palette.transparent,\n    data: [80, 90, 50, 70, 60, 90, 50, 90, 80, 40, 72, 93]\n  }, {\n    label: 'Bulma Satisfaction Score',\n    backgroundColor: palette.danger,\n    borderColor: palette.transparent,\n    data: [20, 30, 20, 40, 50, 40, 15, 60, 30, 20, 42, 53]\n  }]\n});\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/5.8de6765065a34dc29079.js","import store from 'vuex-store'\n\nlet palette = store.getters.palette\n\nexport default {\n  labels: ['North America', 'South America', 'Australia'],\n  datasets: [{\n    label: 'Population (millions)',\n    backgroundColor: [palette.danger, palette.info, palette.success],\n    data: [2478, 5267, 734]\n  }]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/charts/DonutChartData.js","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".widget.chart-widget .widget-body{height:550px}\", \"\", {\"version\":3,\"sources\":[\"/Users/to-hutohu/tohutohu/isucon-portal/client/src/components/statistics/charts/Charts.vue\"],\"names\":[],\"mappings\":\"AACA,kCACE,YAAc,CACf\",\"file\":\"Charts.vue\",\"sourcesContent\":[\"\\n.widget.chart-widget .widget-body {\\n  height: 550px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-cb88b40a\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/sass-resources-loader/lib/loader.js?{\"resources\":\"/Users/to-hutohu/tohutohu/isucon-portal/client/src/sass/shared.scss\"}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/statistics/charts/Charts.vue\n// module id = 4Oln\n// module chunks = 5","\n/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n(function() {\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\n    slice = [].slice;\n\n  type = (function() {\n\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function(rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n\n  TWOPI = PI * 2;\n\n  PITHIRD = PI / 3;\n\n  DEG2RAD = PI / 180;\n\n  RAD2DEG = 180 / PI;\n\n  chroma = function() {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, arguments, function(){});\n  };\n\n  chroma[\"default\"] = chroma;\n\n  _interpolators = [];\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.version = '1.3.7';\n\n  _input = {};\n\n  _guess_formats = [];\n\n  _guess_formats_sorted = false;\n\n  Color = (function() {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function(a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n          if (mode) {\n            break;\n          }\n        }\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function() {\n      return this.hex();\n    };\n\n    Color.prototype.clone = function() {\n      return chroma(me._rgb);\n    };\n\n    return Color;\n\n  })();\n\n  chroma._input = _input;\n\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function() {\n    var key, results;\n    results = [];\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n    return results;\n  })();\n\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function() {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function(t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function() {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function() {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function() {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n    colors = (function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n      return results;\n    })();\n    if (colors.length === 2) {\n      ref = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref[0], lab1 = ref[1];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.bezier = function(colors) {\n    var f;\n    f = bezier(colors);\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    return f;\n  };\n\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n   */\n\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n    if (start == null) {\n      start = 300;\n    }\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n    if (hue == null) {\n      hue = 1;\n    }\n    if (gamma == null) {\n      gamma = 1;\n    }\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n    dh = 0;\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    f = function(fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255]));\n    };\n    f.start = function(s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function(r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function(g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function(h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function(h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function() {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function(col1, col2, f, m) {\n    var interpol, len, o, res;\n    if (f == null) {\n      f = 0.5;\n    }\n    if (m == null) {\n      m = 'rgb';\n    }\n\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function(col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function() {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n    return results;\n  };\n\n  chroma.rgb = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\n  };\n\n  Color.prototype.rgb = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function(n) {\n      var a;\n      a = unpack(arguments);\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function(colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    return new Color(xyz);\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function(colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    l = colors.length;\n    colors = colors.map(function(c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(isNaN(xyz[i]) ? 0 : 1);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n    alpha = first.alpha();\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += 1;\n          if (mode.charAt(i) === 'h') {\n            A = xyz2[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          } else {\n            xyz[i] += xyz2[i];\n          }\n        }\n      }\n    }\n    for (i in xyz) {\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n        while (A < 0) {\n          A += 360;\n        }\n        while (A >= 360) {\n          A -= 360;\n        }\n        xyz[i] = A;\n      } else {\n        xyz[i] = xyz[i] / cnt[i];\n      }\n    }\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function(channels, mode) {\n    var a, b, g, hxa, r, str, u;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + (function() {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n        case 'argb':\n          return hxa + str;\n        default:\n          return str;\n      }\n    })();\n  };\n\n  _input.hex = function(h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\n  };\n\n  Color.prototype.hex = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function() {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, min, ref, s;\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  chroma.hsl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function() {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function() {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  chroma.hsv = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function() {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function(num) {\n    var b, g, r;\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = (num >> 8) & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function() {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function(num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function() {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function() {\n    var _g, b, c, delta, g, h, min, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function() {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function(css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  rgb2css = function(rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {\n\n    }\n  };\n\n  rnd = function(a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function(hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function(h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['css']), function(){});\n  };\n\n  Color.prototype.css = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function(name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function(n) {\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function(n) {\n    var h, k;\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n      this._rgb[3] = 1;\n      this;\n    }\n    h = this.hex();\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n    return h;\n  };\n\n  lch2lab = function() {\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function() {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function() {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function() {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function() {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function() {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function(mode) {\n    var b, c, f, g, k, m, r, ref, y;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function() {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function() {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\n  };\n\n  Color.prototype.cmyk = function() {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function() {\n    var i, k, o, rgb, v;\n    rgb = (function() {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n      return results;\n    }).apply(this, arguments);\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n    return rgb;\n  };\n\n  chroma.gl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\n  };\n\n  Color.prototype.gl = function() {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function(r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function(lum, mode) {\n    var cur_lum, eps, max_iter, rgba, test;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n    rgba = this._rgb;\n    if (lum === 0) {\n      rgba = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      rgba = [255, 255, 255, this[3]];\n    } else {\n      cur_lum = rgb2luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      if (cur_lum > lum) {\n        rgba = test(chroma('black'), this).rgba();\n      } else {\n        rgba = test(this, chroma('white')).rgba();\n      }\n    }\n    return chroma(rgba).alpha(this.alpha());\n  };\n\n  temperature2rgb = function(kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b];\n  };\n\n  rgb2temperature = function() {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function() {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2, ref, ref1;\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function(a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n    if (mode == null) {\n      mode = 'lab';\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function(a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n    if (L == null) {\n      L = 1;\n    }\n    if (C == null) {\n      C = 1;\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\n  };\n\n  Color.prototype.get = function(modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n    if (channel) {\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function(modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +(value.substr(1));\n              break;\n            case '/':\n              src[i] /= +(value.substr(1));\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function() {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function(a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function(amount) {\n    var lab, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function(amount) {\n    var lch, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function() {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function(f) {\n    return function(bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function(f) {\n    return function(c0, c1) {\n      var i, o, out;\n      out = [];\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n      return out;\n    };\n  };\n\n  normal = function(a, b) {\n    return a;\n  };\n\n  multiply = function(a, b) {\n    return a * b / 255;\n  };\n\n  darken = function(a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function(a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function(a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n\n  blend.multiply = blend_f(each(multiply));\n\n  blend.screen = blend_f(each(screen));\n\n  blend.overlay = blend_f(each(overlay));\n\n  blend.darken = blend_f(each(darken));\n\n  blend.lighten = blend_f(each(lighten));\n\n  blend.dodge = blend_f(each(dodge));\n\n  blend.burn = blend_f(each(burn));\n\n  chroma.blend = blend;\n\n  chroma.analyze = function(data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.scale = function(colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n    setColors = function(colors) {\n      var c, col, o, ref, ref1, w;\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n      if (type(colors) === 'array') {\n        colors = colors.slice(0);\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        _pos.length = 0;\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    getClass = function(value) {\n      var i, n;\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n      val = value;\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val)) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n    f = function(v) {\n      var c;\n      c = chroma(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function(classes) {\n      var d;\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function(domain) {\n      var c, d, k, len, o, ref, w;\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function(p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function(numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n        result = (function() {\n          results = [];\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\n          return results;\n        }).apply(this).map(function(i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function(v) {\n          return f(v);\n        });\n      }\n      if (chroma[out]) {\n        result = result.map(function(c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function(c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function(g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  hsi2rgb = function(h, s, i) {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function() {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function() {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function(col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat((function() {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n    return results;\n  })());\n\n  interpolate_num = function(col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function(col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/chroma-js/chroma.js\n// module id = 4SWg\n// module chunks = 5","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/_core').Array.from;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/array/from.js\n// module id = 5zde\n// module chunks = 5","import store from 'vuex-store'\n\nlet palette = store.getters.palette\n\nexport default {\n  labels: ['Africa', 'Asia', 'Europe'],\n  datasets: [{\n    label: 'Population (millions)',\n    backgroundColor: [palette.primary, palette.warning, palette.danger],\n    data: [2478, 5267, 734]\n  }]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/charts/PieChartData.js","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"charts-page\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('vuestic-widget',{staticClass:\"chart-widget\",attrs:{\"headerText\":\"スコア推移\"}},[_c('vuestic-chart',{attrs:{\"options\":_vm.options,\"data\":_vm.scoreData,\"type\":\"line\"}})],1)],1)]),_vm._v(\" \"),(false)?_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('vuestic-widget',{staticClass:\"chart-widget\",attrs:{\"headerText\":_vm._f(\"translate\")('charts.verticalBarChart')}},[_c('vuestic-chart',{attrs:{\"data\":_vm.verticalBarChartData,\"type\":\"vertical-bar\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('vuestic-widget',{staticClass:\"chart-widget\",attrs:{\"headerText\":_vm._f(\"translate\")('charts.horizontalBarChart')}},[_c('vuestic-chart',{attrs:{\"data\":_vm.horizontalBarChartData,\"type\":\"horizontal-bar\"}})],1)],1)]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('vuestic-widget',{staticClass:\"chart-widget\",attrs:{\"headerText\":_vm._f(\"translate\")('charts.pieChart')}},[_c('vuestic-chart',{attrs:{\"data\":_vm.pieChartData,\"type\":\"pie\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6\"},[_c('vuestic-widget',{staticClass:\"chart-widget\",attrs:{\"headerText\":_vm._f(\"translate\")('charts.donutChart')}},[_c('vuestic-chart',{attrs:{\"data\":_vm.donutChartData,\"type\":\"donut\"}})],1)],1)]),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('vuestic-widget',{staticClass:\"chart-widget\",attrs:{\"headerText\":_vm._f(\"translate\")('charts.bubbleChart')}},[_c('vuestic-chart',{attrs:{\"data\":_vm.bubbleChartData,\"type\":\"bubble\"}})],1)],1)])]):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-cb88b40a\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/statistics/charts/Charts.vue\n// module id = EAxN\n// module chunks = 5","\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/helpers/toConsumableArray.js\n// module id = Gu7T\n// module chunks = 5","import store from 'vuex-store'\n\nlet palette = store.getters.palette\n\nexport default {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  datasets: [\n    {\n      label: 'USA',\n      backgroundColor: palette.primary,\n      borderColor: palette.transparent,\n      data: [50, 20, 12, 39, 10, 40, 39, 80, 40, 20, 12, 11]\n    },\n    {\n      label: 'USSR',\n      backgroundColor: palette.info,\n      borderColor: palette.transparent,\n      data: [50, 10, 22, 39, 15, 20, 85, 32, 60, 50, 20, 30]\n    }\n  ]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/charts/VerticalBarChartData.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-cb88b40a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../../../node_modules/sass-resources-loader/lib/loader.js?{\\\"resources\\\":\\\"/Users/to-hutohu/tohutohu/isucon-portal/client/src/sass/shared.scss\\\"}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Charts.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"830e6876\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/extract-text-webpack-plugin/dist/loader.js?{\"omit\":1,\"remove\":true}!./node_modules/vue-style-loader!./node_modules/css-loader?{\"minimize\":true,\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-cb88b40a\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./node_modules/sass-resources-loader/lib/loader.js?{\"resources\":\"/Users/to-hutohu/tohutohu/isucon-portal/client/src/sass/shared.scss\"}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/components/statistics/charts/Charts.vue\n// module id = KvVw\n// module chunks = 5","import store from 'vuex-store'\nimport utils from 'services/utils'\n\nlet palette = store.getters.palette\n\nexport default {\n  datasets: [\n    {\n      label: 'USA',\n      backgroundColor: utils.hex2rgb(palette.danger, 0.9).css,\n      borderColor: palette.transparent,\n      data: [\n        {\n          x: 23,\n          y: 25,\n          r: 15\n        },\n        {\n          x: 40,\n          y: 10,\n          r: 10\n        },\n        {\n          x: 30,\n          y: 22,\n          r: 30\n        },\n        {\n          x: 7,\n          y: 43,\n          r: 40\n        },\n        {\n          x: 23,\n          y: 27,\n          r: 120\n        },\n        {\n          x: 20,\n          y: 15,\n          r: 11\n        },\n        {\n          x: 7,\n          y: 10,\n          r: 35\n        },\n        {\n          x: 10,\n          y: 20,\n          r: 40\n        }\n      ]\n    },\n    {\n      label: 'Russia',\n      backgroundColor: utils.hex2rgb(palette.primary, 0.9).css,\n      borderColor: palette.transparent,\n      data: [\n        {\n          x: 0,\n          y: 30,\n          r: 15\n        },\n        {\n          x: 20,\n          y: 20,\n          r: 20\n        },\n        {\n          x: 15,\n          y: 15,\n          r: 50\n        },\n        {\n          x: 31,\n          y: 46,\n          r: 30\n        },\n        {\n          x: 20,\n          y: 14,\n          r: 25\n        },\n        {\n          x: 34,\n          y: 17,\n          r: 30\n        },\n        {\n          x: 44,\n          y: 44,\n          r: 10\n        },\n        {\n          x: 39,\n          y: 25,\n          r: 35\n        }\n      ]\n    },\n    {\n      label: 'Canada',\n      backgroundColor: utils.hex2rgb(palette.warning, 0.9).css,\n      borderColor: palette.transparent,\n      data: [\n        {\n          x: 10,\n          y: 30,\n          r: 45\n        },\n        {\n          x: 10,\n          y: 50,\n          r: 20\n        },\n        {\n          x: 5,\n          y: 5,\n          r: 30\n        },\n        {\n          x: 40,\n          y: 30,\n          r: 20\n        },\n        {\n          x: 33,\n          y: 15,\n          r: 18\n        },\n        {\n          x: 40,\n          y: 20,\n          r: 40\n        },\n        {\n          x: 33,\n          y: 33,\n          r: 40\n        }\n      ]\n    },\n    {\n      label: 'Belarus',\n      backgroundColor: utils.hex2rgb(palette.info, 0.9).css,\n      borderColor: palette.transparent,\n      data: [\n        {\n          x: 35,\n          y: 30,\n          r: 45\n        },\n        {\n          x: 25,\n          y: 40,\n          r: 35\n        },\n        {\n          x: 5,\n          y: 5,\n          r: 30\n        },\n        {\n          x: 5,\n          y: 20,\n          r: 40\n        },\n        {\n          x: 10,\n          y: 40,\n          r: 15\n        },\n        {\n          x: 3,\n          y: 10,\n          r: 10\n        },\n        {\n          x: 15,\n          y: 40,\n          r: 40\n        },\n        {\n          x: 7,\n          y: 15,\n          r: 10\n        }\n      ]\n    },\n    {\n      label: 'Ukraine',\n      backgroundColor: utils.hex2rgb(palette.success, 0.9).css,\n      borderColor: palette.transparent,\n      data: [\n        {\n          x: 25,\n          y: 10,\n          r: 40\n        },\n        {\n          x: 17,\n          y: 40,\n          r: 40\n        },\n        {\n          x: 35,\n          y: 10,\n          r: 20\n        },\n        {\n          x: 3,\n          y: 40,\n          r: 10\n        },\n        {\n          x: 40,\n          y: 40,\n          r: 40\n        },\n        {\n          x: 20,\n          y: 10,\n          r: 10\n        },\n        {\n          x: 10,\n          y: 27,\n          r: 35\n        },\n        {\n          x: 7,\n          y: 26,\n          r: 40\n        }\n      ]\n    }\n  ]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/charts/BubbleChartData.js","<template>\n  <div class=\"charts-page\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <vuestic-widget class=\"chart-widget\" headerText=\"スコア推移\">\n          <vuestic-chart :options=\"options\" :data=\"scoreData\" type=\"line\"></vuestic-chart>\n        </vuestic-widget>\n      </div>\n    </div>\n\n    <div v-if=\"false\">\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <vuestic-widget class=\"chart-widget\" :headerText=\"'charts.verticalBarChart' | translate\">\n          <vuestic-chart :data=\"verticalBarChartData\" type=\"vertical-bar\"></vuestic-chart>\n        </vuestic-widget>\n      </div>\n      <div class=\"col-md-6\">\n        <vuestic-widget class=\"chart-widget\" :headerText=\"'charts.horizontalBarChart' | translate\">\n          <vuestic-chart :data=\"horizontalBarChartData\" type=\"horizontal-bar\"></vuestic-chart>\n        </vuestic-widget>\n      </div>\n    </div>\n\n\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <vuestic-widget class=\"chart-widget\" :headerText=\"'charts.pieChart' | translate\">\n          <vuestic-chart :data=\"pieChartData\" type=\"pie\"></vuestic-chart>\n        </vuestic-widget>\n      </div>\n      <div class=\"col-md-6\">\n        <vuestic-widget class=\"chart-widget\" :headerText=\"'charts.donutChart' | translate\">\n          <vuestic-chart :data=\"donutChartData\" type=\"donut\"></vuestic-chart>\n        </vuestic-widget>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <vuestic-widget class=\"chart-widget\" :headerText=\"'charts.bubbleChart' | translate\">\n          <vuestic-chart :data=\"bubbleChartData\" type=\"bubble\"></vuestic-chart>\n        </vuestic-widget>\n      </div>\n    </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import LineChartData from 'data/charts/LineChartData'\n  import BubbleChartData from 'data/charts/BubbleChartData'\n  import PieChartData from 'data/charts/PieChartData'\n  import DonutChartData from 'data/charts/DonutChartData'\n  import VerticalBarChartData from 'data/charts/VerticalBarChartData'\n  import HorizontalBarChartData from 'data/charts/HorizontalBarChartData'\n\n  import chroma from 'chroma-js'\n\n  export default {\n    name: 'charts',\n    data: function () {\n      return {\n        bubbleChartData: BubbleChartData,\n        lineChartData: LineChartData,\n        pieChartData: PieChartData,\n        donutChartData: DonutChartData,\n        verticalBarChartData: VerticalBarChartData,\n        horizontalBarChartData: HorizontalBarChartData,\n        options: {\n          scales: {\n            xAxes: [{\n              type: 'time'\n            }]\n          },\n          lineTension: 0,\n        }\n      }\n    },\n    computed: {\n      scoreData () {\n        const data = {\n          datasets: []\n        }\n        data.datasets = this.$store.state.AllResults\n        .filter(a => a.results.filter(r => r.pass).length > 0)\n        .map((team, i, c) => {\n          const color = chroma(360 / c.length * i, 0.6, 0.4, 'hsl')\n          const td = {\n            label: team.name,\n            fill: false,\n            lineTension: 0,\n            pointBackgroundColor: color.alpha(0.8).css(),\n            borderColor: color.alpha(0.6).css(),\n            pointBorderColor: color.darken(0.4).alpha(0.8).css(),\n            pointMoverBackgroundColor: color.darken(2).alpha(0.8).css(),\n            data: []\n          }\n          td.data = team.results.filter(r => r.pass && r.score !== 0).map(r => {\n            return {x: r.created_at, y: r.score}\n          })\n          return td\n        }).filter(a => a.data.length > 0).sort((a, b) => {\n          const po = a.data.reduce((c, d) => { return c < d.y ? d.y : c }, 0)\n          const pi = b.data.reduce((c, d) => { return c < d.y ? d.y : c }, 0)\n          return pi - po\n        })\n\n        return data\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\">\n  .widget.chart-widget {\n    .widget-body {\n      height: 550px;\n    }\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/statistics/charts/Charts.vue","import utils from 'services/utils'\nimport store from 'vuex-store'\n\nlet palette = store.getters.palette\n\nexport default {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'Debit',\n      backgroundColor: utils.hex2rgb(palette.primary, 0.6).css,\n      borderColor: palette.transparent,\n      data: [40, 39, 10, 40, 39, 80, 40]\n    },\n    {\n      label: 'Credit',\n      backgroundColor: utils.hex2rgb(palette.info, 0.6).css,\n      borderColor: palette.transparent,\n      data: [50, 20, 70, 30, 10, 5, 70]\n    }\n  ],\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/charts/LineChartData.js","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/array/from.js\n// module id = c/Tr\n// module chunks = 5","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-cb88b40a\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"/Users/to-hutohu/tohutohu/isucon-portal/client/src/sass/shared.scss\\\"}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Charts.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Charts.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-cb88b40a\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Charts.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/statistics/charts/Charts.vue\n// module id = dfb7\n// module chunks = 5","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_create-property.js\n// module id = fBQ2\n// module chunks = 5","export default {\n  hex2rgb (hex, opacity) {\n    hex = (hex + '').trim()\n\n    let rgb = null\n    let match = hex.match(/^#?(([0-9a-zA-Z]{3}){1,3})$/)\n\n    if (!match) {\n      return null\n    }\n\n    rgb = {}\n\n    hex = match[1]\n\n    if (hex.length === 6) {\n      rgb.r = parseInt(hex.substring(0, 2), 16)\n      rgb.g = parseInt(hex.substring(2, 4), 16)\n      rgb.b = parseInt(hex.substring(4, 6), 16)\n    } else if (hex.length === 3) {\n      rgb.r = parseInt(hex.substring(0, 1) + hex.substring(0, 1), 16)\n      rgb.g = parseInt(hex.substring(1, 2) + hex.substring(1, 2), 16)\n      rgb.b = parseInt(hex.substring(2, 3) + hex.substring(2, 3), 16)\n    }\n\n    rgb.css = 'rgb' + (opacity ? 'a' : '') + '('\n    rgb.css += rgb.r + ',' + rgb.g + ',' + rgb.b\n    rgb.css += (opacity ? ',' + opacity : '') + ')'\n\n    return rgb\n  },\n\n  findInNestedByName (array, name) {\n    if (typeof array !== 'undefined') {\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].name === name) return [{...array[i]}]\n        let a = this.findInNestedByName(array[i].children, name)\n        if (a != null) {\n          a.unshift({...array[i]})\n          return [...a]\n        }\n      }\n    }\n    return null\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/utils.js","'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.array.from.js\n// module id = qyJz\n// module chunks = 5","import store from 'vuex-store'\n\nlet palette = store.getters.palette\n\nexport default {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n  datasets: [\n    {\n      label: 'Vuestic Satisfaction Score',\n      backgroundColor: palette.warning,\n      borderColor: palette.transparent,\n      data: [80, 90, 50, 70, 60, 90, 50, 90, 80, 40, 72, 93]\n    },\n    {\n      label: 'Bulma Satisfaction Score',\n      backgroundColor: palette.danger,\n      borderColor: palette.transparent,\n      data: [20, 30, 20, 40, 50, 40, 15, 60, 30, 20, 42, 53]\n    }\n  ]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/charts/HorizontalBarChartData.js"],"sourceRoot":""}